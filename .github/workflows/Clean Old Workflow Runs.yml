name: Clean All But Latest Workflow Run

on:
  schedule:
    - cron: '12 * * * *' # 每2小时运行一次
  workflow_dispatch: # 支持手动触发

jobs:
  clean-old-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Delete all but latest workflow run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          # 获取所有 workflow runs 并存储
          all_runs=()
          page=1
          echo "Fetching workflow runs..."
          while true; do
            response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/$REPO/actions/runs?per_page=100&page=$page")
            runs=$(echo "$response" | jq -c '.workflow_runs[] | {id: .id, created_at: .created_at}')
            if [ -z "$runs" ]; then
              echo "No more runs to process"
              break
            fi
            while IFS= read -r run; do
              all_runs+=("$run")
            done <<< "$runs"
            page=$((page + 1))
          done

          # 如果没有 runs，直接退出
          if [ ${#all_runs[@]} -eq 0 ]; then
            echo "No workflow runs found"
            exit 0
          fi

          # 找到最新的 run
          latest_run_id=""
          latest_timestamp=0
          for run in "${all_runs[@]}"; do
            created_at=$(echo "$run" | jq -r '.created_at')
            timestamp=$(date -d "$created_at" +%s 2>/dev/null || date -u -d "$created_at" +%s)
            if [ $timestamp -gt $latest_timestamp ]; then
              latest_timestamp=$timestamp
              latest_run_id=$(echo "$run" | jq -r '.id')
            fi
          done
          echo "Latest run ID: $latest_run_id (created at: $(date -d @$latest_timestamp))"

          # 删除除最新 run 外的所有 runs
          deleted_count=0
          for run in "${all_runs[@]}"; do
            run_id=$(echo "$run" | jq -r '.id')
            if [ "$run_id" != "$latest_run_id" ]; then
              echo "Deleting run ID: $run_id"
              response=$(curl -s -w "%{http_code}" -X DELETE \
                -H "Authorization: Bearer $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/$REPO/actions/runs/$run_id")
              echo "Delete response code for run $run_id: $response"
              if [ "$response" = "204" ]; then
                deleted_count=$((deleted_count + 1))
              else
                echo "Failed to delete run $run_id (status: $response)"
              fi
            fi
          done
          echo "Total runs deleted: $deleted_count"
