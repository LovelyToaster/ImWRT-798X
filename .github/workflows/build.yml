name: Build ImmortalWrt for RAX3000M NAND (OpenWrt 24.10)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free up disk space
      run: |
        echo "Cleaning up to free disk space..."
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        df -h

    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        sudo apt update
        sudo apt install -y --no-install-recommends \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk \
          gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man \
          intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev libreadline-dev \
          libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
          ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply \
          python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools \
          subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
        sudo apt clean

    - name: Clone ImmortalWrt
      run: |
        echo "Cloning ImmortalWrt repository..."
        git clone -b openwrt-24.10 --single-branch --filter=blob:none --depth=1 \
          https://github.com/immortalwrt/immortalwrt
        cd immortalwrt
        echo "Updating feeds..."
        ./scripts/feeds update -a || { echo "Feeds update failed!"; exit 1; }
        echo "Installing feeds..."
        ./scripts/feeds install -a || { echo "Feeds install failed!"; exit 1; }

    - name: Copy and verify custom config
      run: |
        echo "Copying custom config..."
        cp rax3000m-nand.config immortalwrt/.config
        cd immortalwrt
        echo "Running make defconfig..."
        make defconfig || { echo "make defconfig failed!"; exit 1; }
        echo "Verifying .config..."
        grep "CONFIG_TARGET_mediatek_filogic_DEVICE_cmcc_rax3000m-nand" .config || \
          { echo "Target device not set correctly in .config!"; exit 1; }

    - name: Build firmware
      run: |
        cd immortalwrt
        echo "Building firmware with reduced parallelism..."
        make -j4 V=s || { echo "Build failed! Check logs above."; exit 1; }
        echo "Listing build output..."
        find bin/targets -type f -name "*.bin" || { echo "No .bin files found in build output!"; exit 1; }

    - name: Verify build output
      run: |
        echo "Verifying build output directory..."
        if [ -d "immortalwrt/bin/targets/mediatek/filogic" ]; then
          ls -l immortalwrt/bin/targets/mediatek/filogic/ || \
            { echo "Failed to list build directory!"; exit 1; }
          echo "Checking for factory and sysupgrade binaries..."
          ls immortalwrt/bin/targets/mediatek/filogic/*{factory,sysupgrade}.bin 2>/dev/null || \
            { echo "Expected firmware binaries not found!"; exit 1; }
        else
          echo "Build directory immortalwrt/bin/targets/mediatek/filogic does not exist!"
          exit 1
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4  # Upgraded to v4 to avoid v3.1.2 issues
      with:
        name: firmware
        path: immortalwrt/bin/targets/mediatek/filogic/*.bin
        if-no-files-found: error
        retention-days: 5
