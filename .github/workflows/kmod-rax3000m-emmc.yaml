name: Build specified kmod

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: '源仓库 URL'
        default: 'https://github.com/padavanonly/immortalwrt-mt798x-24.10'
      repo_branch:
        description: '源仓库分支'
        default: 'openwrt-24.10-6.6'
      commit_hash:
        description: '指定 commit 哈希(可选)'
        required: false
      kmod_name:
        description: '要编译的 kmod 名称'
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Show inputs
      run: |
        echo "repo_url=${{ github.event.inputs.repo_url }}"
        echo "repo_branch=${{ github.event.inputs.repo_branch }}"
        echo "commit_hash=${{ github.event.inputs.commit_hash }}"
        echo "kmod_name=${{ github.event.inputs.kmod_name }}"

    - name: Clone source repository
      run: |
        git clone --branch "${{ github.event.inputs.repo_branch }}" --depth=1 "${{ github.event.inputs.repo_url }}" openwrt
        cd openwrt
        if [ -n "${{ github.event.inputs.commit_hash }}" ]; then
          echo "Checking out to commit ${{ github.event.inputs.commit_hash }}"
          git fetch --depth=1 origin ${{ github.event.inputs.commit_hash }}
          git checkout ${{ github.event.inputs.commit_hash }}
        fi

    - name: Install build dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential ccache cmake curl git gawk gcc-multilib g++-multilib \
          libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev \
          libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool \
          ninja-build python3 python3-pip python3-ply python3-docutils python3-pyelftools \
          rsync unzip vim wget zlib1g-dev squashfs-tools device-tree-compiler zstd \
          binutils bison flex gettext p7zip p7zip-full patch pkgconf \
          autopoint asciidoc xmlto texinfo
        sudo apt-get autoremove --purge -y
        sudo apt-get clean

    - name: Prepare feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Generate .config
      working-directory: ./openwrt
      run: |
        echo "CONFIG_TARGET_mediatek=y" > .config
        echo "CONFIG_TARGET_mediatek_filogic=y" >> .config
        echo "CONFIG_TARGET_mediatek_filogic_DEVICE_cmcc_rax3000m-emmc=y" >> .config
        echo "CONFIG_PACKAGE_${{ github.event.inputs.kmod_name }}=m" >> .config

    - name: Defconfig
      working-directory: ./openwrt
      run: make defconfig

    - name: Build Linux kernel
      working-directory: ./openwrt
      run: make target/linux/compile V=s -j$(nproc)

    - name: Build specified kmod
      working-directory: ./openwrt
      run: |
        make package/kernel/${{ github.event.inputs.kmod_name }}/compile V=s -j$(nproc)

    - name: Find and copy kmod ipk
      working-directory: ./openwrt
      run: |
        mkdir -p output
        find bin/targets -name "${{ github.event.inputs.kmod_name }}_*.ipk" -exec cp {} output/ \;

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.kmod_name }}
        path: openwrt/output/
