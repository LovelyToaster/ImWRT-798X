name: ImmortalWrt MT798x Builder for cmcc_rax3000m-usboffload
on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  CONFIG_FILE: 2410.config
  DIY_P1_SH: scripts/diy-part1.sh
  DIY_P2_SH: scripts/diy-part2.sh
  EEPROM_FILE: eeprom/MT7981_iPAiLNA_EEPROM.bin
  TARGET_EEPROM_PATH: package/mtk/drivers/mt_wifi/files/mt7981-default-eeprom/MT7981_iPAiLNA_EEPROM.bin
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  ENABLE_5G_25DB: ${{ github.event_name == 'workflow_dispatch' && inputs.enable_5g_25db || 'true' }}

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          echo "Cloning $REPO_URL branch $REPO_BRANCH"
          git clone $REPO_URL -b $REPO_BRANCH openwrt --depth 1
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          ls -la openwrt

      - name: Load custom feeds
        run: |
          if [ -f $DIY_P1_SH ]; then
            chmod +x $DIY_P1_SH
            cd openwrt
            $GITHUB_WORKSPACE/$DIY_P1_SH || { echo "Error: $DIY_P1_SH failed"; exit 1; }
          else
            echo "Warning: $DIY_P1_SH not found, skipping"
          fi

      - name: Update and install feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a || { echo "Error: Feeds update failed"; exit 1; }
          ./scripts/feeds install -a || { echo "Error: Feeds install failed"; exit 1; }

      - name: Apply 5G 25dB EEPROM if enabled
        if: env.ENABLE_5G_25DB == 'true'
        run: |
          cd openwrt
          if [ -f $GITHUB_WORKSPACE/$EEPROM_FILE ]; then
            mkdir -p $(dirname $TARGET_EEPROM_PATH)
            cp $GITHUB_WORKSPACE/$EEPROM_FILE $TARGET_EEPROM_PATH
            echo "Applied 5G 25dB EEPROM"
          else
            echo "Error: $EEPROM_FILE not found"
            exit 1
          fi

      - name: Load custom configuration
        run: |
          cd openwrt
          if [ -f $GITHUB_WORKSPACE/$CONFIG_FILE ]; then
            cp $GITHUB_WORKSPACE/$CONFIG_FILE .config
            echo "Loaded $CONFIG_FILE"
          else
            echo "Error: $CONFIG_FILE not found"
            exit 1
          fi
          if [ -f $GITHUB_WORKSPACE/$DIY_P2_SH ]; then
            chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH
            $GITHUB_WORKSPACE/$DIY_P2_SH || { echo "Error: $DIY_P2_SH failed"; exit 1; }
          else
            echo "Warning: $DIY_P2_SH not found, skipping"
          fi
          echo "CONFIG_TARGET_DEVICE_mediatek_mt7981_DEVICE_cmcc_rax3000m-usboffload=y" >> .config
          make defconfig || { echo "Error: make defconfig failed"; cat .config; exit 1; }
          cat .config > config_dump.txt

      - name: Download package
        run: |
          cd openwrt
          make download -j8 || { echo "Error: make download failed"; exit 1; }
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo "Starting compilation for cmcc_rax3000m-usboffload"
          make -j$(nproc) V=s 2> compile_error.log || {
            echo "Compilation failed, see compile_error.log";
            cat compile_error.log;
            exit 1;
          }
          echo "status=success" >> $GITHUB_OUTPUT
          echo "DEVICE_NAME=_cmcc_rax3000m-usboffload" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          ls -la bin/targets/*/*

      - name: Upload debug logs
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: debug_logs_cmcc_rax3000m-usboffload
          path: |
            openwrt/.config
            openwrt/compile_error.log
            openwrt/config_dump.txt

      - name: Organize files
        id: organize
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          if [ -d . ]; then
            rm -rf packages
            echo "FIRMWARE=$PWD" >> $GITHUB_ENV
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "Error: No firmware files found in bin/targets"
            exit 1
          fi

      - name: Upload firmware
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: ImmortalWrt_cmcc_rax3000m-usboffload${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}
